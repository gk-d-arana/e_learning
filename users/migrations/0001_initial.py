# Generated by Django 3.2.6 on 2022-01-17 13:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
        ('extras', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AvailableForMeeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(blank=True, choices=[('Sunday', 'Sunday'), ('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday')], max_length=255, null=True)),
                ('availaibe_for_meetings_from_hour', models.TimeField(blank=True, null=True)),
                ('availaibe_for_meetings_to_hour', models.TimeField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('cost', models.PositiveIntegerField(blank=True, default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate_description', models.TextField(blank=True, default='', null=True)),
                ('certificate_date', models.DateTimeField(blank=True, null=True)),
                ('certificate_file', models.FileField(blank=True, null=True, upload_to='static/files/')),
            ],
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField()),
                ('total_students', models.PositiveIntegerField(default=0)),
                ('total_balance', models.PositiveIntegerField(default=0)),
                ('total_rate', models.FloatField(default=0)),
                ('badges', models.CharField(choices=[('Best-Selling Instructor', 'Best-Selling Instructor')], default='1', max_length=255)),
                ('profile_image', models.FileField(upload_to='static/images')),
                ('age', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('education', models.CharField(blank=True, default='', max_length=1500, null=True)),
                ('facebook_link', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('job_role', models.TextField(blank=True, default='', null=True)),
                ('courses_count', models.PositiveIntegerField(default=0)),
                ('phone_number', models.CharField(blank=True, max_length=255, null=True)),
                ('website_role', models.CharField(blank=True, choices=[('student', 'student'), ('instructor', 'instructor')], default='student', max_length=20, null=True)),
                ('availaibe_for_meetings', models.ManyToManyField(blank=True, related_name='instructor_available_times', to='users.AvailableForMeeting')),
                ('certificates', models.ManyToManyField(blank=True, to='users.Certificate')),
                ('favourite_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='extras.category')),
                ('my_tests_as_instructor', models.ManyToManyField(blank=True, related_name='my_tests_as_instructor', to='courses.CourseTest')),
                ('my_tests_as_students', models.ManyToManyField(blank=True, related_name='my_tests_as_students', to='courses.MyTest')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OffDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('Sunday', 'Sunday'), ('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday')], default='Sunday', max_length=255)),
                ('duration', models.PositiveIntegerField(blank=True, null=True)),
                ('note', models.TextField(blank=True, default='', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_name', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('lessons_count', models.PositiveIntegerField(default=0)),
                ('not_studied_lessons_count', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='WishList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('courses', models.ManyToManyField(blank=True, to='courses.Course')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.instructor')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, default='', null=True)),
                ('start_hour', models.TimeField(blank=True, null=True)),
                ('end_hour', models.TimeField(blank=True, null=True)),
                ('number_of_subjects_per_day', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('instructor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.instructor')),
                ('off_days', models.ManyToManyField(blank=True, to='users.OffDay')),
                ('subjects', models.ManyToManyField(blank=True, to='users.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='MyLearningVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_watched', models.BooleanField(default=False)),
                ('video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='my_learning_video', to='courses.video')),
            ],
        ),
        migrations.CreateModel(
            name='MyLearningSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='my_learning_section', to='courses.section')),
                ('videos', models.ManyToManyField(blank=True, to='users.MyLearningVideo')),
            ],
        ),
        migrations.CreateModel(
            name='MyLearningCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='my_learning_course', to='courses.course')),
                ('instructor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.instructor')),
                ('rating', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='extras.rating')),
                ('sections', models.ManyToManyField(blank=True, to='users.MyLearningSection')),
            ],
        ),
        migrations.CreateModel(
            name='MyLearning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('courses', models.ManyToManyField(blank=True, to='users.MyLearningCourse')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.instructor')),
            ],
        ),
        migrations.CreateModel(
            name='CodesForPassReset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.PositiveIntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='code_for_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='availableformeeting',
            name='instructor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='instructor_available_time', to='users.instructor'),
        ),
    ]
